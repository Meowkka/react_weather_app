{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\test\\\\cities\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = '5e0051daeb5db477d9ed9cc45b16aaf5';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n        const data = await api_url.json();\n        console.log(data);\n\n        if (!data.sys) {\n          this.setState({\n            temp: undefined,\n            city: undefined,\n            country: undefined,\n            sunrise: undefined,\n            sunset: undefined,\n            error: \"Такого города нет!\"\n          });\n        } else {\n          var sunset = data.sys.sunset;\n          var date = new Date();\n          date.setTime(sunset); //var sunset_date = date.getHours() +\":\"+ date.getMinutes() +\":\"+ date.getSeconds();\n\n          var sunset_date = ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\n          var sunset_date = new Date(sunset);\n          var sunrise = data.sys.sunrise;\n          date = new Date();\n          date.setTime(sunrise);\n          var sunrise_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n          this.setState({\n            temp: data.main.temp,\n            city: data.name,\n            country: data.sys.country,\n            sunrise: sunrise_date,\n            sunset: sunset_date,\n            error: undefined\n          });\n        }\n      } else {\n        this.setState({\n          temp: undefined,\n          city: undefined,\n          country: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          error: \"Введите название города!\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-5 info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-7 form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\test\\cities\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","console","log","sys","setState","date","Date","setTime","sunset_date","getDate","slice","getMonth","getFullYear","sunrise_date","getHours","getMinutes","getSeconds","main","name","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Info from \"./components/info\";\r\nimport Form from \"./components/form\";\r\nimport Weather from \"./components/weather\";\r\n\r\nconst API_KEY= '5e0051daeb5db477d9ed9cc45b16aaf5';\r\n\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    temp: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    sunrise: undefined,\r\n    sunset: undefined,\r\n    error: undefined\r\n  }\r\n\r\n  gettingWeather= async (e) => {\r\n    e.preventDefault();\r\n    const city=e.target.elements.city.value;\r\n\r\n\r\n\r\n    if(city){\r\n      const api_url = await\r\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=metric`);\r\n      const data = await api_url.json();\r\n\r\n      console.log(data);\r\n\r\n      if(!data.sys){\r\n        this.setState({\r\n          temp: undefined,\r\n          city: undefined,\r\n          country: undefined,\r\n          sunrise: undefined,\r\n          sunset: undefined,\r\n          error: \"Такого города нет!\"\r\n      });\r\n      }else{\r\n        var sunset = data.sys.sunset;\r\n        var date = new Date();\r\n        date.setTime(sunset);\r\n        //var sunset_date = date.getHours() +\":\"+ date.getMinutes() +\":\"+ date.getSeconds();\r\n        var sunset_date = ('0' + date.getDate()).slice(-2) + '.' + ('0' + (date.getMonth() + 1)).slice(-2) + '.' + date.getFullYear();\r\n        var sunset_date = new Date(sunset);\r\n\r\n        var sunrise = data.sys.sunrise;\r\n        date = new Date();\r\n        date.setTime(sunrise);\r\n        var sunrise_date = date.getHours() +\":\"+ date.getMinutes() +\":\"+ date.getSeconds();\r\n\r\n        this.setState({\r\n          temp: data.main.temp,\r\n          city: data.name,\r\n          country: data.sys.country,\r\n          sunrise: sunrise_date,\r\n          sunset: sunset_date,\r\n          error: undefined\r\n        });\r\n      }\r\n    } else {\r\n      this.setState({\r\n        temp: undefined,\r\n        city: undefined,\r\n        country: undefined,\r\n        sunrise: undefined,\r\n        sunset: undefined,\r\n        error: \"Введите название города!\"\r\n    });\r\n  }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"wrapper\">\r\n        <div className=\"main\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-5 info\">\r\n                <Info />\r\n              </div>\r\n              <div className=\"col-sm-7 form\">\r\n                <Form weatherMethod={this.gettingWeather} />\r\n                <Weather\r\n                    temp={this.state.temp}\r\n                    city={this.state.city}\r\n                    country={this.state.country}\r\n                    sunrise={this.state.sunrise}\r\n                    sunset={this.state.sunset}\r\n                    error={this.state.error}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}