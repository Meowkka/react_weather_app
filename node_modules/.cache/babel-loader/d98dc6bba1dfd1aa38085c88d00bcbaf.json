{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\test\\\\cities\\\\src\\\\App.js\";\nimport React from \"react\";\nimport Info from \"./components/info\";\nimport Form from \"./components/form\";\nimport Weather from \"./components/weather\";\nconst API_KEY = '5e0051daeb5db477d9ed9cc45b16aaf5';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temp: undefined,\n      city: undefined,\n      country: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.gettingWeather = async e => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n\n      if (city) {\n        const api_url = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \"&appid=\").concat(API_KEY));\n        const data = await api_url.json();\n        var sunset = data.sys.sunset;\n        var date = new Date();\n        date.setTime(sunset);\n        var sunset_date = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n        this.setState({\n          temp: data.main.temp,\n          city: data.name,\n          country: data.sys.country,\n          sunrise: data.sys.sunrise,\n          sunset: sunset_date,\n          error: \"\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Info, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Form, {\n      weatherMethod: this.gettingWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temp: this.state.temp,\n      city: this.state.city,\n      country: this.state.country,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Documents\\test\\cities\\src\\App.js"],"names":["React","Info","Form","Weather","API_KEY","App","Component","state","temp","undefined","city","country","sunrise","sunset","error","gettingWeather","e","preventDefault","target","elements","value","api_url","fetch","data","json","sys","date","Date","setTime","sunset_date","getHours","getMinutes","getSeconds","setState","main","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,MAAMC,OAAO,GAAE,kCAAf;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAiC;AAAA;AAAA;AAAA,SAE/BC,KAF+B,GAEvB;AACNC,MAAAA,IAAI,EAAEC,SADA;AAENC,MAAAA,IAAI,EAAED,SAFA;AAGNE,MAAAA,OAAO,EAAEF,SAHH;AAING,MAAAA,OAAO,EAAEH,SAJH;AAKNI,MAAAA,MAAM,EAAEJ,SALF;AAMNK,MAAAA,KAAK,EAAEL;AAND,KAFuB;;AAAA,SAW/BM,cAX+B,GAWf,MAAOC,CAAP,IAAa;AAC3BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMP,IAAI,GAACM,CAAC,CAACE,MAAF,CAASC,QAAT,CAAkBT,IAAlB,CAAuBU,KAAlC;;AAIA,UAAGV,IAAH,EAAQ;AACN,cAAMW,OAAO,GAAG,MAChBC,KAAK,6DAAsDZ,IAAtD,oBAAoEN,OAApE,EADL;AAEA,cAAMmB,IAAI,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAnB;AAEA,YAAIX,MAAM,GAAGU,IAAI,CAACE,GAAL,CAASZ,MAAtB;AACA,YAAIa,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,QAAAA,IAAI,CAACE,OAAL,CAAaf,MAAb;AACA,YAAIgB,WAAW,GAAGH,IAAI,CAACI,QAAL,KAAiB,GAAjB,GAAsBJ,IAAI,CAACK,UAAL,EAAtB,GAAyC,GAAzC,GAA8CL,IAAI,CAACM,UAAL,EAAhE;AAEA,aAAKC,QAAL,CAAc;AACZzB,UAAAA,IAAI,EAAEe,IAAI,CAACW,IAAL,CAAU1B,IADJ;AAEZE,UAAAA,IAAI,EAAEa,IAAI,CAACY,IAFC;AAGZxB,UAAAA,OAAO,EAAEY,IAAI,CAACE,GAAL,CAASd,OAHN;AAIZC,UAAAA,OAAO,EAAEW,IAAI,CAACE,GAAL,CAASb,OAJN;AAKZC,UAAAA,MAAM,EAAEgB,WALI;AAMZf,UAAAA,KAAK,EAAE;AANK,SAAd;AAQD;AACF,KApC8B;AAAA;;AAsC/BsB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,IAAD;AAAM,MAAA,aAAa,EAAE,KAAKrB,cAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,OAAD;AACI,MAAA,IAAI,EAAE,KAAKR,KAAL,CAAWC,IADrB;AAEI,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,IAFrB;AAGI,MAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI,OAHxB;AAII,MAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWK,OAJxB;AAKI,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWM,MALvB;AAMI,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,KANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAcD;;AArD8B;;AAuDjC,eAAeT,GAAf","sourcesContent":["import React from \"react\";\r\nimport Info from \"./components/info\";\r\nimport Form from \"./components/form\";\r\nimport Weather from \"./components/weather\";\r\n\r\nconst API_KEY= '5e0051daeb5db477d9ed9cc45b16aaf5';\r\n\r\nclass App extends React.Component{\r\n\r\n  state = {\r\n    temp: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    sunrise: undefined,\r\n    sunset: undefined,\r\n    error: undefined\r\n  }\r\n\r\n  gettingWeather= async (e) => {\r\n    e.preventDefault();\r\n    const city=e.target.elements.city.value;\r\n\r\n\r\n\r\n    if(city){\r\n      const api_url = await\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\r\n      const data = await api_url.json();\r\n\r\n      var sunset = data.sys.sunset;\r\n      var date = new Date();\r\n      date.setTime(sunset);\r\n      var sunset_date = date.getHours() +\":\"+ date.getMinutes() +\":\"+ date.getSeconds();\r\n\r\n      this.setState({\r\n        temp: data.main.temp,\r\n        city: data.name,\r\n        country: data.sys.country,\r\n        sunrise: data.sys.sunrise,\r\n        sunset: sunset_date,\r\n        error: \"\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Info />\r\n        <Form weatherMethod={this.gettingWeather} />\r\n        <Weather\r\n            temp={this.state.temp}\r\n            city={this.state.city}\r\n            country={this.state.country}\r\n            sunrise={this.state.sunrise}\r\n            sunset={this.state.sunset}\r\n            error={this.state.error}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}